# ===== On-Prem AI Note Taker - CENTRALIZED Environment Configuration =====
# üéØ SINGLE SOURCE OF TRUTH: Copy this to .env and use everywhere!
# 
# ‚úÖ This file now powers:
#    - Backend (via env_loader.py)
#    - Frontend (via envLoader.ts) 
#    - Docker (via env_file: .env)
#    - Electron (reads from root .env)
#
# üîí SECURITY: All hardcoded credentials removed - everything loads from here!

# =============================================================================
# VPS SERVER CONFIGURATION 
# =============================================================================

# ===== Application Server =====
APP_HOST=0.0.0.0                    # Bind to all interfaces (required for external access)
APP_PORT=8000                       # Backend API port

# ===== MAXIMUM ACCURACY WHISPER CONFIGURATION =====
WHISPER_MODEL=large-v3              # üèÜ MAXIMUM ACCURACY: large-v3 model (~3GB, 70-80% better than base)
WHISPER_COMPUTE_TYPE=float16        # Best quality with your 16GB RAM (better than int16)
WHISPER_DEVICE=cpu                  # Force CPU usage for VPS
WHISPER_CPU_THREADS=6               # Optimize for 6 vCPU VPS (use 6 out of 8 cores)
WHISPER_MEMORY_LIMIT_GB=16          # Memory limit for Whisper (large-v3 uses ~3-5GB)

# ===== MAXIMUM QUALITY SETTINGS =====
WHISPER_BEAM_SIZE=5                 # Beam size: 5 for better quality (up from 1)
WHISPER_BEST_OF=5                   # Consider 5 samples for maximum quality (up from 3)
WHISPER_TEMPERATURE=0.0             # Deterministic output
WHISPER_CONDITION_ON_PREVIOUS_TEXT=true # CRITICAL: Improve continuity across segments
WHISPER_WORD_TIMESTAMPS=true        # ‚≠ê ENABLE: Better speaker detection & segmentation
WHISPER_VAD_MIN_SILENCE_MS=300      # More sensitive silence detection (down from 500)
WHISPER_VAD_SPEECH_PAD_MS=150       # Better word boundary detection (up from 120)
WHISPER_LOG_PROB_THRESHOLD=-1.0     # Log probability threshold
WHISPER_COMPRESSION_RATIO_THRESHOLD=2.4 # Compression ratio threshold
WHISPER_DOWNLOAD_ROOT=./models      # Local model storage (VPS path)

# ===== ENHANCED CONTEXT FOR MAXIMUM QUALITY =====
WHISPER_INITIAL_PROMPT="This is a professional meeting or conversation with multiple speakers. Please transcribe accurately with proper punctuation and speaker identification. Focus on clarity, speaker transitions, and technical terminology."

# ===== ADVANCED WHISPER SETTINGS =====
WHISPER_NO_SPEECH_THRESHOLD=0.4     # Improved voice activity detection
WHISPER_HALLUCINATION_SILENCE_THRESHOLD=2.0  # Reduce hallucinations

# ===== Ollama Configuration (OPTIMIZED for VPS) =====
# When using docker-compose on the VPS for both backend and Ollama, use the
# Docker service name for in-network communication between containers.
OLLAMA_BASE_URL=http://ollama:11434
OLLAMA_MODEL=qwen2.5:3b-instruct    # OPTIMIZED: Fast 3B model perfect for meeting notes (1.9GB, 6-7s response)
OLLAMA_TIMEOUT_SECONDS=3600         # Request timeout (1 hour for slow VPS/models)
OLLAMA_CPU_THREADS=12               # OPTIMIZED: Double CPU threads for better performance
OLLAMA_MEMORY_LIMIT_GB=18           # OPTIMIZED: Increased memory for better model performance

# ===== Ollama Performance Optimizations =====
OLLAMA_NUM_PARALLEL=6               # OPTIMIZED: Use all 6 vCPU cores for parallel processing
OLLAMA_CPU_AVX=1                    # Enable AVX instructions for better CPU performance
OLLAMA_CPU_AVX2=1                   # Enable AVX2 instructions for better CPU performance
OLLAMA_CPU_F16=1                    # Enable F16 precision for better performance
OLLAMA_CPU_MKL=1                    # Enable Intel MKL optimization

# ===== Performance & Resources =====
MAX_CONCURRENCY=3                    # OPTIMIZED: Increased to 3 concurrent transcriptions (using all 6 vCPU cores)
MAX_UPLOAD_MB=200                    # OPTIMIZED: Increased to 200MB for longer meetings (supports 2+ hour meetings)

# ===== Language Restrictions (OPTIMIZED for speed) =====
ALLOWED_LANGUAGES=tr,en             # OPTIMIZED: EN+TR only (20-25% speed boost vs auto-detect)
FORCE_LANGUAGE_VALIDATION=true       # Strict language validation (prevents errors)

# ===== ENHANCED SPEAKER IDENTIFICATION =====
ENABLE_SPEAKER_IDENTIFICATION=true   # Enable speaker differentiation in transcripts
SPEAKER_CHANGE_THRESHOLD_MS=800     # Speaker change detection threshold (0.8 second silence)
MAX_SPEAKERS=6                      # Maximum number of speakers to identify (up from 5)
SPEAKER_SIMILARITY_THRESHOLD=0.7    # Voice similarity threshold for speaker matching

# ===== OPTIMIZED CHUNKING FOR SPEAKER PERSISTENCE =====
CHUNK_DURATION_SECONDS=45           # Audio chunk length (45s = sweet spot for accuracy + speaker tracking)
CHUNK_OVERLAP_SECONDS=8             # Overlap between chunks to preserve speaker context

# ===== Progress Tracking =====
ENABLE_PROGRESS_TRACKING=true        # Enable progress tracking
PROGRESS_UPDATE_INTERVAL_MS=500      # Progress update frequency
ENABLE_SSE=true                      # Enable Server-Sent Events

# ===== Queue System =====
USE_QUEUE_SYSTEM=true                # Enable Redis-based job queuing
REDIS_URL=redis://redis:6379         # Redis connection URL (Docker service name for internal communication)
QUEUE_MAX_WORKERS=2                  # Maximum concurrent workers

# ===== AUTHENTICATION (REQUIRED for Security) =====
# üîí SECURE: Set these to protect your API - CHANGE THESE PASSWORDS!
# üéØ CENTRALIZED: These credentials work for ALL components (frontend, backend, electron)
BASIC_AUTH_USERNAME=myca
BASIC_AUTH_PASSWORD=wj2YyxrJ4cqcXgCA
# These VITE_ variables are automatically available to frontend
VITE_API_BASE_URL=http://95.111.244.159:8000/api
VITE_AUDIO_CHUNK_MS=45000           # 45-second chunks for optimal speaker tracking  
VITE_MAX_FILE_SIZE_MB=200           # Support for 2+ hour meetings
VITE_WHISPER_MODEL=large-v3         # Display which model is being used
VITE_ENABLE_SPEAKER_TRACKING=true   # Enable speaker features in UI
VITE_ENABLE_PROGRESS_TRACKING=true  # Show detailed progress
VITE_ENABLE_SSE=true               # Real-time updates
VITE_DEFAULT_LANGUAGE=auto         # Smart language detection

# ===== Logging =====
LOG_LEVEL=INFO                       # Log level: DEBUG, INFO, WARNING, ERROR

# ===== CORS & Security =====
# CORS origins
# - To allow everything (useful for Electron app and mixed local/VPS access), keep "*"
# - To restrict, use a comma-separated list (e.g. "http://localhost:5173,http://95.111.244.159,null")
#   Note: Backend is configured to support wildcard using allow_origin_regex, even with credentials.
ALLOWED_ORIGINS=*

# =============================================================================
# üéØ CENTRALIZED SYSTEM - NO MORE MULTIPLE ENV FILES! 
# =============================================================================
# 
# ‚úÖ OLD WAY (3 separate files):        ‚ùå NEW WAY (1 centralized file):
#    - backend/.env                     - Copy this to .env  
#    - frontend/.env.local              - Everything loads from there!
#    - main/.env                        - No more copy-pasting!
#
# üöÄ ELECTRON CONFIGURATION (Auto-loaded from root .env)
# -------------------------------------------------------
ELECTRON_BACKEND_PORT=8002           # Local backend port for Electron app
ELECTRON_API_BASE_URL=http://localhost:8002/api  # Electron backend URL

# üîß DEVELOPMENT OVERRIDES (Uncomment for local development)
# -------------------------------------------------------
# Uncomment these lines if you want to override settings for local development:
#
# For local backend development:
# APP_PORT=8001
# OLLAMA_BASE_URL=http://95.111.244.159:11434  # Point to VPS Ollama
# REDIS_URL=redis://95.111.244.159:6385        # Point to VPS Redis
#
# For local frontend development: 
# VITE_API_BASE_URL=http://localhost:8001/api   # Point to local backend
#
# For maximum local performance (smaller model):
# WHISPER_MODEL=base                            # Faster for development
# WHISPER_BEAM_SIZE=1                          # Faster processing
# WHISPER_BEST_OF=1                            # Quicker results

# =============================================================================
# VPS INFORMATION (for reference) =====
VPS_HOST=95.111.244.159
VPS_USER=$USER
VPS_PORT=22

# =============================================================================
# üéØ CENTRALIZED CONFIGURATION SYSTEM - QUICK START GUIDE
# =============================================================================

# üöÄ SETUP INSTRUCTIONS:
# 1. Copy this file to .env: cp env.example .env
# 2. Edit your credentials in .env (change username/password above)
# 3. Start services: docker-compose up -d
# 4. Access UI at: http://95.111.244.159:5173

# üèóÔ∏è ARCHITECTURE:
# - Backend: http://95.111.244.159:8000 (loads from root .env)
# - Frontend: http://95.111.244.159:5173 (loads from root .env) 
# - Ollama: http://ollama:11434 (internal) / http://95.111.244.159:11434 (external)
# - Redis: redis://redis:6379 (internal) / 95.111.244.159:6385 (external)

# üîí SECURITY FEATURES:
# - ‚úÖ No hardcoded credentials anywhere in code
# - ‚úÖ Centralized authentication (one place to update)
# - ‚úÖ Environment validation (fails safely if misconfigured)
# - ‚úÖ Git security (.env ignored, only templates committed)

# üéØ PERFORMANCE OPTIMIZATIONS:
# - ‚úÖ Whisper large-v3 model (70-80% better accuracy than base)
# - ‚úÖ 45-second chunks with 8-second overlap (optimal speaker tracking)
# - ‚úÖ Enhanced speaker persistence across entire meetings  
# - ‚úÖ Word timestamps enabled for better segmentation
# - ‚úÖ Optimized for 16GB RAM and 6 vCPU VPS

# üõ†Ô∏è USAGE:
# - Recording: 45-second chunks with enhanced speaker tracking
# - Processing: Large-v3 Whisper model with maximum quality settings
# - Summarization: qwen2.5:3b-instruct (6-7s response time)
# - Languages: Turkish and English optimized (20-25% speed boost)

# üì± ELECTRON SUPPORT:
# - Desktop app automatically loads from this .env file
# - Mini recorder with floating window controls
# - System audio + microphone recording
# - Offline capable with VPS sync

# üîß TROUBLESHOOTING:
# - Run security audit: ./scripts/remove-hardcoded-creds.sh audit  
# - Validate config: ./scripts/validate-env-security.sh validate
# - View logs: docker-compose logs -f backend
VITE_DEV_MODE=true
