"""Language-specific prompts for transcription and summarization"""

# English prompts
CHUNK_PROMPT_EN = """You are an expert meeting-minutes assistant. Summarize the following transcript chunk in English.
Output strictly as:
- Key Points
- Decisions
- Action Items (Who, What, When)

Keep names, dates, amounts. If a speaker is unknown, write 'Owner: TBD'. Text:

{chunk}"""

MERGE_PROMPT_EN = """Merge these bullet summaries into a clean, non-duplicated Meeting Minutes with sections:
1) Overview (3-5 bullets)
2) Decisions (bulleted)
3) Action Items (Owner, Due date)
4) Risks/Dependencies

Keep the language English and keep it concise.

Summaries to merge:
{summaries}"""

# Turkish prompts
CHUNK_PROMPT_TR = """Uzman bir toplantÄ± notÃ§usun. AÅŸaÄŸÄ±daki metin parÃ§asÄ±nÄ± TÃ¼rkÃ§e Ã¶zetle.
Ã‡Ä±ktÄ± formatÄ±:
- Ana BaÅŸlÄ±klar
- AlÄ±nan Kararlar
- Aksiyonlar (Kim, Ne, Ne zaman)

Ä°simleri, tarihleri ve tutarlarÄ± koru. KonuÅŸmacÄ± bilinmiyorsa 'Sahip: TBD' yaz. Metin:

{chunk}"""

MERGE_PROMPT_TR = """Bu madde Ã¶zetlerini temiz, tekrarsÄ±z ToplantÄ± NotlarÄ± olarak birleÅŸtir:
1) Genel BakÄ±ÅŸ (3-5 madde)
2) AlÄ±nan Kararlar (madde halinde)
3) Aksiyonlar (Sahip, BitiÅŸ tarihi)
4) Riskler/BaÄŸÄ±mlÄ±lÄ±klar

Dili TÃ¼rkÃ§e tut ve kÄ±sa tut.

BirleÅŸtirilecek Ã¶zetler:
{summaries}"""

# Auto language prompt (defaults to Turkish for better local support)
CHUNK_PROMPT_AUTO = CHUNK_PROMPT_TR
MERGE_PROMPT_AUTO = MERGE_PROMPT_TR

# One-shot summary prompts
SINGLE_SUMMARY_PROMPT_EN = (
    "You are an assistant that writes concise meeting notes. "
    "Summarize the following transcript into: 1) a concise summary (3-6 sentences), "
    "2) key decisions, 3) action items with owners if possible, 4) open questions.\n\n"
    "Transcript:\n{transcript}"
)

SINGLE_SUMMARY_PROMPT_TR = (
    "KÄ±sa ve Ã¶z toplantÄ± notlarÄ± yazan bir asistansÄ±n. "
    "AÅŸaÄŸÄ±daki metni ÅŸu baÅŸlÄ±klarla Ã¶zetle: 1) KÄ±sa Ã¶zet (3-6 cÃ¼mle), "
    "2) AlÄ±nan kararlar, 3) Aksiyonlar (mÃ¼mkÃ¼nse sahipleriyle), 4) AÃ§Ä±k sorular.\n\n"
    "Metin:\n{transcript}"
)

def get_chunk_prompt(language: str) -> str:
    """Get the appropriate chunk prompt based on language"""
    if language == "tr":
        return CHUNK_PROMPT_TR
    elif language == "en":
        return CHUNK_PROMPT_EN
    else:
        return CHUNK_PROMPT_AUTO

def get_merge_prompt(language: str) -> str:
    """Get the appropriate merge prompt based on language"""
    if language == "tr":
        return MERGE_PROMPT_TR
    elif language == "en":
        return MERGE_PROMPT_EN
    else:
        return MERGE_PROMPT_AUTO


def get_single_summary_prompt(language: str) -> str:
    """Get the appropriate one-shot summary prompt based on language"""
    if language == "tr" or language == "auto":
        return SINGLE_SUMMARY_PROMPT_TR
    elif language == "en":
        return SINGLE_SUMMARY_PROMPT_EN
    # Default to Turkish for better local support
    return SINGLE_SUMMARY_PROMPT_TR


# ðŸš¨ PHASE 4.4: Speaker-Enhanced Summary Prompts
SPEAKER_ENHANCED_SUMMARY_PROMPT_EN = """You are an expert meeting analyst who creates comprehensive meeting summaries with speaker insights.

Given a meeting transcript with speaker information, create a detailed summary following this structure:

## Meeting Overview
[2-3 sentences describing the meeting's main purpose and outcome]

## Speaker Participation
[Brief overview of who participated and their engagement levels]

## Key Discussion Points
[Organize by main topics, showing who said what]
- **Topic 1**: Speaker 1 mentioned that... Speaker 2 responded by... Speaker 3 added...
- **Topic 2**: Speaker 1 proposed... Speaker 2 raised concerns about... 

## Decisions Made
[List decisions with who proposed/supported them]
- **Decision 1**: Proposed by Speaker 1, supported by Speaker 2...
- **Decision 2**: Speaker 3 suggested... Speaker 1 agreed...

## Action Items
[Clear action items with speaker ownership]
- **Speaker 1**: [Action item with details]
- **Speaker 2**: [Action item with details]

## Speaker Insights
[Analysis of each speaker's contributions]
- **Speaker 1** (X% talking time): [Key contributions, communication style]
- **Speaker 2** (X% talking time): [Key contributions, communication style]

## Next Steps & Open Questions
[Future actions and unresolved items]

Transcript with speakers:
{transcript_with_speakers}

Speaker Statistics:
{speaker_stats}"""

SPEAKER_ENHANCED_SUMMARY_PROMPT_TR = """KonuÅŸmacÄ± analizi yapan uzman bir toplantÄ± analistisin. KonuÅŸmacÄ± bilgileri olan toplantÄ± metninden detaylÄ± Ã¶zet Ã§Ä±kar.

AÅŸaÄŸÄ±daki yapÄ±yÄ± takip et:

## ToplantÄ± Genel BakÄ±ÅŸ
[ToplantÄ±nÄ±n ana amacÄ±nÄ± ve sonucunu anlatan 2-3 cÃ¼mle]

## KonuÅŸmacÄ± KatÄ±lÄ±mÄ±
[Kimler katÄ±ldÄ± ve katÄ±lÄ±m seviyeleri hakkÄ±nda kÄ±sa bilgi]

## Ana TartÄ±ÅŸma KonularÄ±
[Ana konulara gÃ¶re organize et, kim ne sÃ¶yledi gÃ¶ster]
- **Konu 1**: KonuÅŸmacÄ± 1 ÅŸunu belirtti... KonuÅŸmacÄ± 2 ÅŸu ÅŸekilde yanÄ±tladÄ±... KonuÅŸmacÄ± 3 ekledi...
- **Konu 2**: KonuÅŸmacÄ± 1 Ã¶nerdi... KonuÅŸmacÄ± 2 endiÅŸelerini dile getirdi...

## AlÄ±nan Kararlar
[KararlarÄ± kimin Ã¶nerdiÄŸi/desteklediÄŸi ile birlikte listele]
- **Karar 1**: KonuÅŸmacÄ± 1 tarafÄ±ndan Ã¶nerildi, KonuÅŸmacÄ± 2 destekledi...
- **Karar 2**: KonuÅŸmacÄ± 3 Ã¶nerdi... KonuÅŸmacÄ± 1 kabul etti...

## Aksiyon Maddeleri
[KonuÅŸmacÄ± sahipliÄŸi ile net aksiyon maddeleri]
- **KonuÅŸmacÄ± 1**: [DetaylÄ± aksiyon maddesi]
- **KonuÅŸmacÄ± 2**: [DetaylÄ± aksiyon maddesi]

## KonuÅŸmacÄ± Analizi
[Her konuÅŸmacÄ±nÄ±n katkÄ±larÄ±nÄ±n analizi]
- **KonuÅŸmacÄ± 1** (%X konuÅŸma sÃ¼resi): [Ana katkÄ±lar, iletiÅŸim stili]
- **KonuÅŸmacÄ± 2** (%X konuÅŸma sÃ¼resi): [Ana katkÄ±lar, iletiÅŸim stili]

## Sonraki AdÄ±mlar & AÃ§Ä±k Sorular
[Gelecek aksiyonlar ve Ã§Ã¶zÃ¼lmemiÅŸ konular]

KonuÅŸmacÄ±lÄ± metin:
{transcript_with_speakers}

KonuÅŸmacÄ± Ä°statistikleri:
{speaker_stats}"""


def get_speaker_enhanced_summary_prompt(language: str) -> str:
    """Get the appropriate speaker-enhanced summary prompt based on language"""
    if language == "en":
        return SPEAKER_ENHANCED_SUMMARY_PROMPT_EN
    elif language == "tr" or language == "auto":
        return SPEAKER_ENHANCED_SUMMARY_PROMPT_TR
    # Default to Turkish for better local support
    return SPEAKER_ENHANCED_SUMMARY_PROMPT_TR